@using UserInterface.Models
@model BuildingDto
@{
	//ViewData["Title"] = "Edit";
	ViewData["Title"] = "Add Building";
}
<h2>Add Building</h2>

<html lang="en">
<head>
	<title>Add Building</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
	
	<link rel="stylesheet" href="~/login-form-18/css/style.css">
</head>
<body>
	<div class="container">
		<form asp-action="AddBuilding" method="post" asp-validation-summary="ModelOnly" class="tex login-form">
			<div class="column ">
				<div class="row">
					<div class="form-group col-md-5">
						<label class="control-label">Building Name</label>
						<div>
							@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
						</div>
					</div>
					<div class="form-group col-md-5">
						<label class="control-label">Number Of Floors</label>
						<div>
							@Html.TextBoxFor(m => m.NumofFloor, new { @class = "form-control" })
						</div>
					</div>
				</div>	
				<div class="row"> 
					<div class="form-group col-md-5">
						<label class="control-label">City</label>
						<div>
							<!-- City dropdown listesi -->
							@Html.DropDownListFor(m => m.CityId, Model.CityList, "Select City", new { @class = "form-control", @id = "CityId", @onchange = "getTowns()" })
						</div>
					</div>
					<div class="form-group col-md-5">
						<label class="control-label">Town</label>
						<div>
							<!-- Town dropdown listesi -->
							@Html.DropDownListFor(m => m.TownId, Model.TownList, "Select Town", new { @class = "form-control", @id = "TownId" })
						</div>
					</div>
				</div>				
				<div class="row">
					<div class="form-group col-md-6">
						<label class="control-label">Address</label>
						<div>
							@Html.TextBoxFor(m => m.Address, new { @class = "form-control", @style = "weight:15px;height:70px; " })
						</div>
					</div>
				</div>
				<div class="row">
					<div class="form-group col-md-3 ">
						<button id="login-submit" type="submit" class="btn btn-primary rounded submit p-3 px-5">Create</button>
					</div>
				</div>				
			</div>
		</form>
	</div>
			
	


	<script src="~/login-form-18/js/jquery.min.js"></script>
	<script src="~/login-form-18/js/popper.js"></script>
	<script src="~/login-form-18/js/bootstrap.min.js"></script>
	<script src="~/login-form-18/js/main.js"></script>

	<script>
		// Şehir dropdown listesi değiştiğinde çağrılacak olan fonksiyon
		function getTowns() {
			// Seçilen şehrin ID'sini al
			var cityId = $("#CityId").val();

			// Şehir ID'si boş ise ilçe dropdown listesini temizle
			if (cityId == "") {
				$("#TownId").empty();
				$("#TownId").append($('<option>').text("Select Town").attr('value', ""));
				return;
			}

			// AJAX isteği göndererek ilçe bilgilerini al
			$.ajax({
				url: "/Admin/Building/GetTowns",
				type: "GET",
				data: { cityId: cityId },
				success: function (data) {
					// İlçe dropdown listesini güncelle
					$("#TownId").empty();
					$("#TownId").append($('<option>').text("Select Town").attr('value', ""));
					$.each(data, function (index, item) {
						$("#TownId").append($('<option>').text(item.text).attr('value', item.value));
					});
				},
				error: function () {
					// Hata durumunda ilçe dropdown listesini temizle
					$("#TownId").empty();
					$("#TownId").append($('<option>').text("Select Town").attr('value', ""));
				}
			});
		}
	</script>

</body>
</html>


